<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:v="using:Litenbib.Views">
  <!-- Add Resources Here -->
	<ControlTheme x:Key="{x:Type MenuItem}" TargetType="MenuItem">
		<Setter Property="Background" Value="{DynamicResource InputBackground}" />
		<Setter Property="Foreground" Value="{DynamicResource MainForeground}" />
		<!--  Narrow padding should be used for mouse input, when non-narrow one should be used for touch input in future.  -->
		<Setter Property="Padding" Value="{DynamicResource MenuFlyoutItemThemePaddingNarrow}" />
		<Setter Property="Template">
			<ControlTemplate>
				<Panel>
					<Border Name="PART_LayoutRoot"
							Padding="{TemplateBinding Padding}"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="{TemplateBinding CornerRadius}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="MenuItemIGT" />
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="MenuItemChevron" />
							</Grid.ColumnDefinitions>

							<ContentPresenter Name="PART_HeaderPresenter"
											  Content="{TemplateBinding Header}"
											  ContentTemplate="{TemplateBinding HeaderTemplate}"
											  VerticalAlignment="Center"
											  HorizontalAlignment="Stretch"
											  RecognizesAccessKey="True"/>
							<TextBlock x:Name="PART_InputGestureText"
									   Grid.Column="1"
									   Margin="{DynamicResource MenuInputGestureTextMargin}"
									   Text="{TemplateBinding InputGesture, Converter={StaticResource KeyGestureConverter}}"
									   HorizontalAlignment="Right"
									   VerticalAlignment="Center"
									   Foreground="{DynamicResource MenuFlyoutItemKeyboardAcceleratorTextForeground}"/>
							<Path Name="PART_ChevronPath"
								  Stretch="Uniform"
								  Width="8"
								  Height="16"
								  Data="{StaticResource MenuItemChevronPathData}"
								  Fill="{DynamicResource MenuFlyoutSubItemChevron}"
								  Margin="{DynamicResource MenuFlyoutItemChevronMargin}"
								  VerticalAlignment="Center"
								  Grid.Column="2" />
						</Grid>
					</Border>
					<v:ExPopup Name="PART_Popup"
							   WindowManagerAddShadowHint="False"
							   Placement="RightEdgeAlignedTop"
							   HorizontalOffset="{DynamicResource MenuFlyoutSubItemPopupHorizontalOffset}"
							   IsLightDismissEnabled="False"
							   IsOpenEx="{TemplateBinding IsSubMenuOpen, Mode=OneWay}">
						<v:ExPopup.OpenAnimation>
							<Animation Duration="0:0:0.15" FillMode="Both" Easing="SineEaseOut">
								<KeyFrame Cue="0%">
									<Setter Property="Opacity" Value="0.0"/>
									<Setter Property="TranslateTransform.X" Value="-40.0"/>
									<Setter Property="TranslateTransform.Y" Value="-80.0"/>
								</KeyFrame>
								<KeyFrame Cue="100%">
									<Setter Property="Opacity" Value="1.0"/>
									<Setter Property="TranslateTransform.X" Value="0.0"/>
									<Setter Property="TranslateTransform.Y" Value="0.0"/>
								</KeyFrame>
							</Animation>
						</v:ExPopup.OpenAnimation>
						<v:ExPopup.CloseAnimation>
							<Animation Duration="0:0:0.15" FillMode="Both" Easing="SineEaseOut">
								<KeyFrame Cue="0%">
									<Setter Property="Opacity" Value="1.0"/>
									<Setter Property="TranslateTransform.X" Value="0.0"/>
									<Setter Property="TranslateTransform.Y" Value="0.0"/>
								</KeyFrame>
								<KeyFrame Cue="100%">
									<Setter Property="Opacity" Value="0.0"/>
									<Setter Property="TranslateTransform.X" Value="-40.0"/>
									<Setter Property="TranslateTransform.Y" Value="-80.0"/>
								</KeyFrame>
							</Animation>
						</v:ExPopup.CloseAnimation>
						<Border Background="{DynamicResource MenuFlyoutPresenterBackground}"
								BorderBrush="{DynamicResource MenuFlyoutPresenterBorderBrush}"
								BorderThickness="1"
								Padding="8 2"
								MaxWidth="{DynamicResource FlyoutThemeMaxWidth}"
								MinHeight="{DynamicResource MenuFlyoutThemeMinHeight}"
								HorizontalAlignment="Stretch"
								CornerRadius="{DynamicResource OverlayCornerRadius}">
							<ScrollViewer Theme="{StaticResource FluentMenuScrollViewer}">
								<ItemsPresenter Name="PART_ItemsPresenter"
												ItemsPanel="{TemplateBinding ItemsPanel}"
												Margin="{DynamicResource MenuFlyoutScrollerMargin}"
												Grid.IsSharedSizeScope="True" />
							</ScrollViewer>
						</Border>
					</v:ExPopup>
				</Panel>
			</ControlTemplate>
		</Setter>

		<Style Selector="^:selected">
			<Style Selector="^ /template/ Border#PART_LayoutRoot">
				<Setter Property="Background" Value="{DynamicResource MenuFlyoutItemBackgroundPointerOver}" />
			</Style>
			<Style Selector="^ /template/ ContentPresenter#PART_HeaderPresenter">
				<Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemForegroundPointerOver}" />
			</Style>
			<Style Selector="^ /template/ TextBlock#PART_InputGestureText">
				<Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemKeyboardAcceleratorTextForegroundPointerOver}" />
			</Style>
			<Style Selector="^ /template/ Path#PART_ChevronPath">
				<Setter Property="Fill" Value="{DynamicResource MenuFlyoutSubItemChevronPointerOver}" />
			</Style>
		</Style>

		<!--  Listen for PART_LayoutRoot:pointerover, so it will not be triggered when subitem is pressed  -->
		<Style Selector="^:pressed">
			<Setter Property="RenderTransform" Value="scale(0.98)" />
		</Style>
		<Style Selector="^:pressed /template/ Border#PART_LayoutRoot:pointerover">
			<Setter Property="Background" Value="{DynamicResource MenuFlyoutItemBackgroundPressed}" />
			<Style Selector="^ ContentPresenter#PART_HeaderPresenter">
				<Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemForegroundPressed}" />
			</Style>
			<Style Selector="^ TextBlock#PART_InputGestureText">
				<Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemKeyboardAcceleratorTextForegroundPressed}" />
			</Style>
			<Style Selector="^ Path#PART_ChevronPath">
				<Setter Property="Fill" Value="{DynamicResource MenuFlyoutSubItemChevronPressed}" />
			</Style>
		</Style>

		<Style Selector="^:disabled">
			<Style Selector="^ /template/ Border#PART_LayoutRoot">
				<Setter Property="Background" Value="{DynamicResource MenuFlyoutItemBackgroundDisabled}" />
			</Style>
			<Style Selector="^ /template/ ContentPresenter#PART_HeaderPresenter">
				<Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemForegroundDisabled}" />
			</Style>
			<Style Selector="^ /template/ TextBlock#PART_InputGestureText">
				<Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemKeyboardAcceleratorTextForegroundDisabled}" />
			</Style>
			<Style Selector="^ /template/ Path#PART_ChevronPath">
				<Setter Property="Fill" Value="{DynamicResource MenuFlyoutSubItemChevronDisabled}" />
			</Style>
		</Style>

		<Style Selector="^:open /template/ Path#PART_ChevronPath">
			<Setter Property="Fill" Value="{DynamicResource MenuFlyoutSubItemChevronSubMenuOpened}" />
		</Style>

		<Style Selector="^:empty /template/ Path#PART_ChevronPath">
			<Setter Property="IsVisible" Value="False" />
		</Style>

		<Style Selector="^:separator">
			<Setter Property="Template">
				<ControlTemplate>
					<Separator/>
				</ControlTemplate>
			</Setter>
		</Style>
	</ControlTheme>


	<ControlTheme x:Key="FluentTopLevelMenuItem" TargetType="MenuItem">
		<Setter Property="Background" Value="{DynamicResource MainBackground}" />
		<Setter Property="Foreground" Value="{DynamicResource MainForeground}" />
		<!--  Narrow padding should be used for mouse input, when non-narrow one should be used for touch input in future.  -->
		<Setter Property="Padding" Value="{DynamicResource MenuBarItemPadding}" />
		<Setter Property="Template">
			<ControlTemplate>
				<Border Name="PART_LayoutRoot"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="{TemplateBinding CornerRadius}">
					<Panel>
						<ContentPresenter Name="PART_HeaderPresenter"
										  Content="{TemplateBinding Header}"
										  ContentTemplate="{TemplateBinding HeaderTemplate}"
										  VerticalAlignment="Center"
										  HorizontalAlignment="Stretch"
										  RecognizesAccessKey="True"
										  Margin="{TemplateBinding Padding}"/>
						<v:ExPopup Name="PART_Popup"
								   WindowManagerAddShadowHint="False"
								   MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}"
								   IsLightDismissEnabled="False"
								   IsOpenEx="{TemplateBinding IsSubMenuOpen, Mode=TwoWay}"
								   Placement="BottomEdgeAlignedLeft"
								   OverlayInputPassThroughElement="{Binding $parent[Menu]}">
							<v:ExPopup.OpenAnimation>
								<Animation Duration="0:0:0.15" FillMode="Both">
									<KeyFrame Cue="0%">
										<Setter Property="Opacity" Value="0.0"/>
										<Setter Property="TranslateTransform.X" Value="-40.0"/>
										<Setter Property="TranslateTransform.Y" Value="-80.0"/>
									</KeyFrame>
									<KeyFrame Cue="100%">
										<Setter Property="Opacity" Value="1.0"/>
										<Setter Property="TranslateTransform.X" Value="0.0"/>
										<Setter Property="TranslateTransform.Y" Value="0.0"/>
									</KeyFrame>
								</Animation>
							</v:ExPopup.OpenAnimation>
							<v:ExPopup.CloseAnimation>
								<Animation Duration="0:0:0.15" FillMode="Both">
									<KeyFrame Cue="0%">
										<Setter Property="Opacity" Value="1.0"/>
										<Setter Property="TranslateTransform.X" Value="0.0"/>
										<Setter Property="TranslateTransform.Y" Value="0.0"/>
									</KeyFrame>
									<KeyFrame Cue="100%">
										<Setter Property="Opacity" Value="0.0"/>
										<Setter Property="TranslateTransform.X" Value="-40.0"/>
										<Setter Property="TranslateTransform.Y" Value="-80.0"/>
									</KeyFrame>
								</Animation>
							</v:ExPopup.CloseAnimation>
							<Border Background="{DynamicResource InputBackground}"
									BorderBrush="{DynamicResource MainBorder}"
									BorderThickness="1"
									Padding="8 2"
									MaxWidth="{DynamicResource FlyoutThemeMaxWidth}"
									MinHeight="{DynamicResource MenuFlyoutThemeMinHeight}"
									HorizontalAlignment="Stretch"
									CornerRadius="{DynamicResource OverlayCornerRadius}">
								<ScrollViewer Theme="{StaticResource FluentMenuScrollViewer}">
									<ItemsPresenter Name="PART_ItemsPresenter"
													ItemsPanel="{TemplateBinding ItemsPanel}"
													Margin="{DynamicResource MenuFlyoutScrollerMargin}"
													Grid.IsSharedSizeScope="True" />
								</ScrollViewer>
							</Border>
						</v:ExPopup>
					</Panel>
				</Border>
			</ControlTemplate>
		</Setter>

		<Style Selector="^:selected">
			<Style Selector="^ /template/ Border#PART_LayoutRoot">
				<Setter Property="Background" Value="{DynamicResource MenuFlyoutItemBackgroundPointerOver}" />
			</Style>
			<Style Selector="^ /template/ ContentPresenter#PART_HeaderPresenter">
				<Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemForegroundPointerOver}" />
			</Style>
		</Style>

		<!--  Listen for PART_LayoutRoot:pointerover, so it will not be triggered when subitem is pressed  -->
		<Style Selector="^:pressed /template/ Border#PART_LayoutRoot:pointerover">
			<Setter Property="Background" Value="{DynamicResource MenuFlyoutItemBackgroundPressed}" />
			<Style Selector="^ ContentPresenter#PART_HeaderPresenter">
				<Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemForegroundPressed}" />
			</Style>
		</Style>

		<Style Selector="^:disabled">
			<Style Selector="^ /template/ Border#PART_LayoutRoot">
				<Setter Property="Background" Value="{DynamicResource MenuFlyoutItemBackgroundDisabled}" />
			</Style>
			<Style Selector="^ /template/ ContentPresenter#PART_HeaderPresenter">
				<Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemForegroundDisabled}" />
			</Style>
		</Style>
	</ControlTheme>

	<ControlTheme x:Key="{x:Type Menu}" TargetType="Menu">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Height" Value="{DynamicResource MenuBarHeight}" />
		<Setter Property="ItemContainerTheme" Value="{StaticResource FluentTopLevelMenuItem}" />
		<Setter Property="Template">
			<ControlTemplate>
				<Border Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="{TemplateBinding CornerRadius}"
						HorizontalAlignment="Stretch"
						Padding="{TemplateBinding Padding}">
					<ItemsPresenter Name="PART_ItemsPresenter"
									ItemsPanel="{TemplateBinding ItemsPanel}"
									VerticalAlignment="Stretch"
									KeyboardNavigation.TabNavigation="Continue" />
				</Border>
			</ControlTemplate>
		</Setter>
	</ControlTheme>
</ResourceDictionary>
