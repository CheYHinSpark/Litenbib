<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:v="using:Litenbib.Views" >
    <Design.PreviewWith>
        <Grid Width="28" Height="28">
			<Grid.Styles>
				<Style Selector="Path">
					<Setter Property="HorizontalAlignment" Value="Center"/>
					<Setter Property="VerticalAlignment" Value="Center"/>
					<Setter Property="StrokeLineCap" Value="Round"/>
				</Style>
			</Grid.Styles>
			<Path Stroke="Red" Fill="Red" StrokeThickness="1"
				  HorizontalAlignment="Center" VerticalAlignment="Center"
                  Data="M 6,3 A 3,3 0 0 0 6,9 A 3,3 0 0 0 6,3 M 6,0 L 6,1 M 6,12 L 6,11 M 0,6 L 1,6 M 12,6 L 11,6
				  M 1.7574,1.7574 L 2.4645,2.4645 M 10.2426,10.2426 L 9.5355,9.5355 M 10.2426,1.7574 L 9.5355,2.4645 M 1.7574,10.2426 L 2.4645,9.5355"/>
			<!--<Path Fill="White" Opacity="0.5"
				  HorizontalAlignment="Center" VerticalAlignment="Center"
                  Data="M 6,0 A 6,6 0 1 1 1.2,9.6 A 6,6 0 0 0 6,0"/>-->
			<Path Stroke="White" StrokeThickness="1"
				  Data="M 4,0 L 11,0 A 1,1 0 0 1 12,1 L 12,8 A 1,1 0 0 1 11,9 L 4,9 A 1,1 0 0 1 3,8 L 3,1 A 1,1 0 0 1 4,0
				  M 1.5,3 L 1,3 A 1,1 0 0 0 0,4 L 0,11 A 1,1 0 0 0 1,12 L 8,12 A 1,1 0 0 0 9,11 L 9,10.5"/>
        </Grid>
    </Design.PreviewWith>
    
    <x:Double x:Key="TitleBarHeight">40</x:Double>
    <x:Double x:Key="ToolBarHeight">32</x:Double>
    <x:Double x:Key="HintBarHeight">28</x:Double>
    
    <PathGeometry x:Key="-Path" Figures="M 0,0 L 11,0"/>
    <PathGeometry x:Key="xPath" Figures="M 0,0 L 9,9 M 0,9 L 9,0"/>
    <PathGeometry x:Key="brPath" Figures="M 0,9 L 8,9 A 1,1 0 0 0 9,8 L 9,0 M 12,3 L 9,0 M 6,3 L 9,0 M 3,6 L 0,9 M 3,12 L 0,9"/>
    <PathGeometry x:Key="UndoPath" Figures="M 10,12 L 10,9 A 5,5 0 0 0 5,4 L 0,4 M 4,0 L 0,4 4,8"/>
    <PathGeometry x:Key="RedoPath" Figures="M 0,12 L 0,9 A 5,5 0 0 1 5,4 L 10,4 M 6,0 L 10,4 6,8"/>
    <PathGeometry x:Key="DeletePath" Figures="M 3,0 L 7,0 7,1 10,1 10,2 0,2 0,1 3,1 Z M 9,3 L 9,10 8,11 2,11 1,10 1,3 Z"/>
    <PathGeometry x:Key="LinkPath" Figures="M 8,4 A 2.8284,2.8284 0 0 1 8,8 L 4,12 A 2.8284,2.8284 0 0 1 0,8 L 1,7
                  M 4,8 A 2.8284,2.8284 0 0 1 4,4 L 8,0 A 2.8284,2.8284 0 0 1 12,4 L 11,5"/>
    <PathGeometry x:Key="SavePath" Figures="M 1,3.2 L 6,3.2 6,2.2 4.8,1 1.2,1 0,2.2 0,10 1,11 12,11 14,9 14,8 2.8,8 1.3,9.5
                  M 11,0 L 11,6 M 8,3 L 11,6 14,3"/>
    <PathGeometry x:Key="ToLinkPath" Figures="M 6,0 L 11,0 11,5 M 11,0 L 3,8 M 5,2 L 0,2 0,11 9,11 9,5"/>
    <PathGeometry x:Key="ImportPath" Figures="M 3.5,1 L 2,1 0,3 0,10 2,12 10,12 12,10 12,3 10,1 8.5,1 M 6,0 L 6,9 M 3,6 L 6,9 9,6"/>
    <PathGeometry x:Key="CopyPath" Figures="M 4,0 L 11,0 A 1,1 0 0 1 12,1 L 12,8 A 1,1 0 0 1 11,9 L 4,9 A 1,1 0 0 1 3,8 L 3,1 A 1,1 0 0 1 4,0
				  M 1.5,3 L 1,3 A 1,1 0 0 0 0,4 L 0,11 A 1,1 0 0 0 1,12 L 8,12 A 1,1 0 0 0 9,11 L 9,10.5"/>
    <PathGeometry x:Key="RightArrowPath" Figures="M 0,0 L 5,5 0,10"/>
	<PathGeometry x:Key="FilePath" Figures="M 0,0 L 0,11 9,11 9,4 5,0 Z M 5,0 L 5,4 9,4"/>
	<PathGeometry x:Key="KeyPath" Figures="M 3.9,0 A 3.9,3.9 0 1 0 5.4,7.5 L 7,8 12.5,13.5 14.5,11.5 13.5,10.5 12.5,11.5 12,11 13,10 12,9 11,10 8,7 7.5,5.4
                  A 3.9,3.9 0 0 0 3.9,0 M 3.9,2.6 A 1.3,1.3 0 0 0 3.9,5.2 A 1.3,1.3 0 0 0 3.9,2.6"/>
	<PathGeometry x:Key="AddPath" Figures="M 5,0 L 5,5 0,5 0,7 5,7 5,12 7,12 7,7 12,7 12,5 7,5 7,0 Z"/>
	<PathGeometry x:Key="MergePath" Figures="M 5.5,2.5 L 3,0 0,0 0,11 5.5,11 5.5,9 M 7.5,9 L 7.5,11 13,11 13,2.5 10.5,0 7.5,0 7.5,3
				  M 1.5,6 L 5.5,6 M 3.5,4 L 5.5,6 3.5,8 M 11.5,6 L 7.5,6 M 9.5,4 L 7.5,6 9.5,8"/>
	<PathGeometry x:Key="SunPath" Figures="M 6,3 A 3,3 0 0 0 6,9 A 3,3 0 0 0 6,3 M 6,0 L 6,1 M 6,12 L 6,11 M 0,6 L 1,6 M 12,6 L 11,6
				  M 1.7574,1.7574 L 2.4645,2.4645 M 10.2426,10.2426 L 9.5355,9.5355 M 10.2426,1.7574 L 9.5355,2.4645 M 1.7574,10.2426 L 2.4645,9.5355"/>
	<PathGeometry x:Key="MoonPath" Figures="M 6,0 A 6,6 0 1 1 1.2,9.6 A 6,6 0 0 0 6,0"/>
    
    <SolidColorBrush x:Key="DisabledForeground" Color="{DynamicResource DisabledForegroundColor}"/>
    <SolidColorBrush x:Key="HighlightBackground" Color="{DynamicResource HighlightBackgroundColor}"/>
    <SolidColorBrush x:Key="HighlightBorder" Color="{DynamicResource HighlightBorderColor}"/>
    <SolidColorBrush x:Key="HighlightForeground" Color="{DynamicResource HighlightForegroundColor}"/>
    <SolidColorBrush x:Key="InputBackground" Color="{DynamicResource InputBackgroundColor}"/>
    <SolidColorBrush x:Key="MainBackground" Color="{DynamicResource MainBackgroundColor}"/>
    <SolidColorBrush x:Key="MainBorder" Color="{DynamicResource MainBorderColor}"/>
    <SolidColorBrush x:Key="MainForeground" Color="{DynamicResource MainForegroundColor}"/>

    <SolidColorBrush x:Key="TabBackground" Color="{DynamicResource TabBackgroundColor}"/>
    <SolidColorBrush x:Key="ThemeBackground" Color="{DynamicResource ThemeBackgroundColor}"/>
    <SolidColorBrush x:Key="ThemeBorder" Color="{DynamicResource ThemeBorderColor}"/>
    <SolidColorBrush x:Key="ThemeHighlight" Color="{DynamicResource ThemeHighlightColor}"/>
    <SolidColorBrush x:Key="WarningBackground" Color="{DynamicResource WarningBackgroundColor}"/>

    <SolidColorBrush x:Key="ComboBoxItemBackgroundPointerOver" Color="{DynamicResource ThemeBackgroundColor}"/>
    <SolidColorBrush x:Key="ComboBoxItemForegroundPointerOver" Color="{DynamicResource HighlightForegroundColor}"/>
    <SolidColorBrush x:Key="ComboBoxItemBackgroundPressed" Color="{DynamicResource ThemeBackgroundColor}"/>
    <SolidColorBrush x:Key="ComboBoxItemForegroundPressed" Color="{DynamicResource HighlightForegroundColor}"/>
    <SolidColorBrush x:Key="ComboBoxItemBackgroundSelectedPointerOver" Color="{DynamicResource ThemeBackgroundColor}"/>
    <SolidColorBrush x:Key="ComboBoxItemForegroundSelectedPointerOver" Color="{DynamicResource HighlightForegroundColor}"/>
    <SolidColorBrush x:Key="ComboBoxItemBackgroundSelected" Color="{DynamicResource MainBackgroundColor}"/>
    <SolidColorBrush x:Key="ComboBoxItemBorderBrushSelected" Color="{DynamicResource ThemeBorderColor}"/>
    <SolidColorBrush x:Key="ComboBoxItemForegroundSelected" Color="{DynamicResource HighlightForegroundColor}"/>
    <SolidColorBrush x:Key="ComboBoxItemBackgroundSelectedPressed" Color="{DynamicResource ThemeBackgroundColor}"/>
    <SolidColorBrush x:Key="ComboBoxItemForegroundSelectedPressed" Color="{DynamicResource HighlightForegroundColor}"/>

    <SolidColorBrush x:Key="MenuFlyoutItemBackground" Color="{DynamicResource InputBackgroundColor}"/>
    <SolidColorBrush x:Key="MenuFlyoutItemForeground" Color="{DynamicResource MainForegroundColor}"/>
    <SolidColorBrush x:Key="MenuFlyoutItemForegroundDisabled" Color="{DynamicResource DisabledForegroundColor}"/>
    <SolidColorBrush x:Key="MenuFlyoutItemBackgroundPointerOver" Color="{DynamicResource ThemeBackgroundColor}"/>
    <SolidColorBrush x:Key="MenuFlyoutItemForegroundPointerOver" Color="{DynamicResource HighlightForegroundColor}"/>
    <SolidColorBrush x:Key="MenuFlyoutItemBackgroundPressed" Color="{DynamicResource ThemeBackgroundColor}"/>
    <SolidColorBrush x:Key="MenuFlyoutItemForegroundPressed" Color="{DynamicResource HighlightForegroundColor}"/>
    <SolidColorBrush x:Key="MenuFlyoutPresenterBackground" Color="{DynamicResource InputBackgroundColor}"/>
    <SolidColorBrush x:Key="MenuFlyoutPresenterBorderBrush" Color="{DynamicResource MainBorderColor}"/>


    <Thickness x:Key="ComboBoxDropdownContentMargin">3</Thickness>
    <Thickness x:Key="MenuFlyoutItemThemePaddingNarrow">6</Thickness>
    <Thickness x:Key="MenuFlyoutPresenterThemePadding">6</Thickness>
    <Thickness x:Key="TabControlTopPlacementItemMargin">0</Thickness>

    <CornerRadius x:Key="OverlayCornerRadius">8</CornerRadius>

    
    <ControlTheme x:Key="{x:Type Button}" TargetType="Button">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{DynamicResource MainBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource MainForeground}"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="Template">
            <ControlTemplate>
                <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                    <ContentPresenter Content="{TemplateBinding Content}"
                                      Foreground="{TemplateBinding Foreground}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </ControlTemplate>
        </Setter>

        <Style Selector="^:pointerover">
            <Setter Property="Background" Value="{DynamicResource HighlightBackground}"/>
            <Setter Property="Foreground" Value="{DynamicResource HighlightForeground}"/>
            <Setter Property="CornerRadius" Value="8"/>
        </Style>

        <Style Selector="^.warning:pointerover">
            <Setter Property="Background" Value="{DynamicResource WarningBackground}"/>
        </Style>

        <Style Selector="^:pressed">
            <Setter Property="RenderTransform" Value="scale(0.98)" />
        </Style>

        <Style Selector="^:disabled">
            <Setter Property="Foreground" Value="{DynamicResource DisabledForeground}"/>
        </Style>

        <Style Selector="^.window">
            <Setter Property="Width" Value="{DynamicResource TitleBarHeight}"/>
            <Setter Property="Height" Value="{DynamicResource ToolBarHeight}"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Style Selector="^:pointerover">
                <Setter Property="CornerRadius" Value="0"/>
            </Style>
        </Style>

    </ControlTheme>

    <ControlTheme x:Key="{x:Type CheckBox}" TargetType="CheckBox">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="MaxHeight" Value="20" />
        <Setter Property="MaxWidth" Value="20" />
        <Setter Property="Background" Value="{DynamicResource InputBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource MainForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MainForeground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="4" />
        <Setter Property="Template">
            <ControlTemplate>
                <Border x:Name="PART_Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                    <Viewbox UseLayoutRounding="False"
                             Width="12" Height="12">
                            <Path x:Name="CheckGlyph"
                                  Opacity="0"
                                  Fill="{DynamicResource CheckBoxCheckGlyphForegroundUnchecked}"
                                  Stretch="Uniform"
                                  VerticalAlignment="Center"
                                  FlowDirection="LeftToRight" />
                    </Viewbox>
                </Border>
            </ControlTemplate>
        </Setter>
        
        <!-- Unchecked PointerOver State -->
        <Style Selector="^:pointerover">
            <Setter Property="Foreground" Value="{DynamicResource HighlightForeground}"/>
            <Setter Property="Background" Value="{DynamicResource HighlightBackground}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource HighlightForeground}"/>
        </Style>

        <!-- Unchecked Disabled state -->
        <Style Selector="^:disabled">
            <Setter Property="Foreground" Value="{DynamicResource DisabledForeground}"/>
        </Style>

        <Style Selector="^:checked">
            <!-- Checked Normal State -->
            <Setter Property="Background" Value="{DynamicResource ThemeBackground}" />
            <Setter Property="BorderThickness" Value="2"/>
            <Style Selector="^ /template/ Path#CheckGlyph">
                <Setter Property="Data" Value="{StaticResource CheckMarkPathData}" />
                <Setter Property="Opacity" Value="1" />
            </Style>

            <!-- Checked PointerOver State -->
            <Style Selector="^:pointerover">
                <Setter Property="Background" Value="{DynamicResource ThemeHighlight}" />
            </Style>
        </Style>

        <Style Selector="^:indeterminate">
            <!-- Indeterminate Normal State -->
            <Setter Property="Background" Value="{DynamicResource ThemeBackground}" />
            <Setter Property="BorderThickness" Value="2"/>
            <Style Selector="^ /template/ Path#CheckGlyph">
                <Setter Property="Data" Value="M1536 1536v-1024h-1024v1024h1024z" />
                <Setter Property="Opacity" Value="1" />
            </Style>

            <!-- Indeterminate PointerOver State -->
            <Style Selector="^:pointerover">
                <Setter Property="Background" Value="{DynamicResource ThemeHighlight}" />
            </Style>
        </Style>
    </ControlTheme>

    <ControlTheme x:Key="{x:Type v:ExComboBox}" TargetType="v:ExComboBox">
        <Setter Property="MinHeight" Value="28"/>
        <Setter Property="Background" Value="{DynamicResource InputBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MainBorder}"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="8" />
        <Setter Property="Padding" Value="8 6" />
        <Setter Property="Template">
            <ControlTemplate>
                <DataValidationErrors>
                    <Grid ColumnDefinitions="*,24">
                        <Border x:Name="Background"
                                Grid.ColumnSpan="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}" />
                        <ContentControl x:Name="ContentPresenter"
                                        Content="{TemplateBinding SelectionBoxItem}"
                                        Grid.Column="0"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalContentAlignment="Stretch"
                                        VerticalContentAlignment="Center"/>
                        <PathIcon x:Name="DropDownGlyph"
                                  Grid.Column="1"
                                  UseLayoutRounding="False"
                                  IsHitTestVisible="False"
                                  Height="12"
                                  Width="12"
                                  Margin="0,0,10,0"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Center"
                                  Foreground="{DynamicResource MainForeground}"
                                  Data="M1939 486L2029 576L1024 1581L19 576L109 486L1024 1401L1939 486Z"/>
                        <v:ExPopup x:Name="PART_Popup"
                                   WindowManagerAddShadowHint="False"
                                   IsOpenEx="{TemplateBinding IsDropDownOpen, Mode=TwoWay}"
                                   MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}"
                                   MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                   PlacementTarget="Background"
                                   InheritsTransform="True">
                            <v:ExPopup.OpenAnimation>
                                <Animation Duration="0:0:0.2" FillMode="Both" Easing="SineEaseOut">
                                    <KeyFrame Cue="0%">
                                        <Setter Property="Opacity" Value="0.0"/>
                                        <Setter Property="TranslateTransform.Y" Value="-80.0"/>
                                    </KeyFrame>
                                    <KeyFrame Cue="100%">
                                        <Setter Property="Opacity" Value="1.0"/>
                                        <Setter Property="TranslateTransform.Y" Value="0.0"/>
                                    </KeyFrame>
                                </Animation>
                            </v:ExPopup.OpenAnimation>
                            <v:ExPopup.CloseAnimation>
                                <Animation Duration="0:0:0.2" FillMode="Both" Easing="SineEaseOut">
                                    <KeyFrame Cue="0%">
                                        <Setter Property="Opacity" Value="1.0"/>
                                        <Setter Property="TranslateTransform.Y" Value="0.0"/>
                                    </KeyFrame>
                                    <KeyFrame Cue="100%">
                                        <Setter Property="Opacity" Value="0.0"/>
                                        <Setter Property="TranslateTransform.Y" Value="-80.0"/>
                                    </KeyFrame>
                                </Animation>
                            </v:ExPopup.CloseAnimation>
                            <Border x:Name="PopupBorder" RenderTransformOrigin="0.5,0"
                                    Background="{DynamicResource MenuFlyoutPresenterBackground}"
                                    BorderBrush="{DynamicResource MenuFlyoutPresenterBorderBrush}"
                                    BorderThickness="1"
                                    HorizontalAlignment="Stretch"
                                    Padding="{DynamicResource ComboBoxDropdownContentMargin}"
                                    CornerRadius="{DynamicResource OverlayCornerRadius}">
                                <ScrollViewer HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                              VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                              IsDeferredScrollingEnabled="{TemplateBinding (ScrollViewer.IsDeferredScrollingEnabled)}">
                                    <ItemsPresenter Name="PART_ItemsPresenter"
                                                    Margin="{DynamicResource ComboBoxDropdownContentMargin}"
                                                    ItemsPanel="{TemplateBinding ItemsPanel}" />
                                </ScrollViewer>
                            </Border>
                        </v:ExPopup >
                    </Grid>
                </DataValidationErrors>
            </ControlTemplate>
        </Setter>

        <Style Selector="^:pointerover">
            <Setter Property="BorderBrush" Value="{DynamicResource HighlightBorder}"/>
            <Style Selector="^ /template/ PathIcon#DropDownGlyph">
                <Setter Property="Foreground" Value="{DynamicResource HighlightForeground}"/>
            </Style>
        </Style>

        <Style Selector="^:focus">
            <Setter Property="BorderBrush" Value="{DynamicResource ThemeBorder}"/>
            <Setter Property="BorderThickness" Value="2"/>
        </Style>
        
        <Style Selector="^[IsDropDownOpen=True]">
            <Setter Property="BorderBrush" Value="{DynamicResource ThemeBorder}"/>
            <Setter Property="BorderThickness" Value="2"/>
        </Style>
    </ControlTheme>
    
    <ControlTheme x:Key="{x:Type GridSplitter}" TargetType="GridSplitter">
        <Setter Property="Focusable" Value="True" />
        <Setter Property="MinWidth" Value="6" />
        <Setter Property="MinHeight" Value="6" />
		<Setter Property="Background" Value="{DynamicResource MainBackground}" />
		<Setter Property="CornerRadius" Value="3" />
        <Setter Property="Template">
            <ControlTemplate>
                <Border Name="Part_Border" BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        Background="{TemplateBinding Background}">
                </Border>
            </ControlTemplate>
        </Setter>
		<Style Selector="^:pointerover">
			<Setter Property="Background" Value="{DynamicResource HighlightBackground}"/>
		</Style>
		<Style Selector="^:pressed">
			<Setter Property="Background" Value="{DynamicResource ThemeHighlight}"/>
		</Style>
		<Style Selector="^:pressed:pointerover">
			<Setter Property="Background" Value="{DynamicResource ThemeHighlight}"/>
		</Style>
    </ControlTheme>
    
    <ControlTheme x:Key="{x:Type TextBox}" TargetType="TextBox">
        <Setter Property="Foreground" Value="{DynamicResource MainForeground}" />
        <Setter Property="Background" Value="{DynamicResource InputBackground}" />
        <Setter Property="CaretBrush" Value="{DynamicResource MainForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MainBorder}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource TextControlSelectionHighlightColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="8" />
        <Setter Property="Padding" Value="8 6" />
        <Setter Property="FocusAdorner" Value="{x:Null}" />
        <Setter Property="ScrollViewer.IsScrollChainingEnabled" Value="True" />
        <Setter Property="ContextFlyout" Value="{OnFormFactor Desktop={StaticResource DefaultTextBoxContextFlyout}, Mobile={StaticResource HorizontalTextBoxContextFlyout}}"/>
        <Setter Property="Template">
            <ControlTemplate>
                <DataValidationErrors>
                    <Panel>
                        <Border Name="PART_BorderElement"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                MinWidth="{TemplateBinding MinWidth}"
                                MinHeight="{TemplateBinding MinHeight}"/>
                        <ScrollViewer Name="PART_ScrollViewer"
                                      Margin="{TemplateBinding Padding}"
                                      HorizontalScrollBarVisibility="{TemplateBinding (ScrollViewer.HorizontalScrollBarVisibility)}"
                                      VerticalScrollBarVisibility="{TemplateBinding (ScrollViewer.VerticalScrollBarVisibility)}"
                                      IsScrollChainingEnabled="{TemplateBinding (ScrollViewer.IsScrollChainingEnabled)}"
                                      AllowAutoHide="{TemplateBinding (ScrollViewer.AllowAutoHide)}"
                                      BringIntoViewOnFocusChange="{TemplateBinding (ScrollViewer.BringIntoViewOnFocusChange)}">
                            <TextPresenter Name="PART_TextPresenter"
                                           Text="{TemplateBinding Text, Mode=TwoWay}"
                                           CaretBlinkInterval="{TemplateBinding CaretBlinkInterval}"
                                           CaretIndex="{TemplateBinding CaretIndex}"
                                           SelectionStart="{TemplateBinding SelectionStart}"
                                           SelectionEnd="{TemplateBinding SelectionEnd}"
                                           TextAlignment="{TemplateBinding TextAlignment}"
                                           TextWrapping="{TemplateBinding TextWrapping}"
                                           LineHeight="{TemplateBinding LineHeight}"
                                           LetterSpacing="{TemplateBinding LetterSpacing}"
                                           PasswordChar="{TemplateBinding PasswordChar}"
                                           RevealPassword="{TemplateBinding RevealPassword}"
                                           SelectionBrush="{TemplateBinding SelectionBrush}"
                                           SelectionForegroundBrush="{TemplateBinding SelectionForegroundBrush}"
                                           CaretBrush="{TemplateBinding CaretBrush}"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ScrollViewer.Styles>
                                <Style Selector="ScrollContentPresenter#PART_ContentPresenter">
                                    <Setter Property="Cursor" Value="IBeam" />
                                </Style>
                            </ScrollViewer.Styles>
                        </ScrollViewer>
                        <TextBlock Name="PART_Watermark"
                                   Margin="{TemplateBinding Padding}"
                                   Opacity="0.5"
                                   Text="{TemplateBinding Watermark}"
                                   TextAlignment="{TemplateBinding TextAlignment}"
                                   TextWrapping="{TemplateBinding TextWrapping}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   IsHitTestVisible="False"
                                   IsVisible="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Text, Converter={x:Static StringConverters.IsNullOrEmpty}}">
                        </TextBlock>
                    </Panel>
                </DataValidationErrors>
            </ControlTemplate>
        </Setter>

        <Style Selector="^:pointerover">
            <Setter Property="BorderBrush" Value="{DynamicResource HighlightBorder}"/>
        </Style>

        <Style Selector="^:focus">
            <Setter Property="BorderBrush" Value="{DynamicResource ThemeBorder}"/>
            <Setter Property="BorderThickness" Value="2"/>
        </Style>
    </ControlTheme>


    <ControlTheme x:Key="DetailTextBox" TargetType="TextBox">
        <Setter Property="Foreground" Value="{DynamicResource MainForeground}" />
        <Setter Property="Background" Value="{DynamicResource InputBackground}" />
        <Setter Property="CaretBrush" Value="{DynamicResource MainForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MainBorder}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource TextControlSelectionHighlightColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="8" />
        <Setter Property="Padding" Value="8 6" />
        <Setter Property="FocusAdorner" Value="{x:Null}" />
        <Setter Property="ScrollViewer.IsScrollChainingEnabled" Value="True" />
        <Setter Property="ContextFlyout" Value="{OnFormFactor Desktop={StaticResource DefaultTextBoxContextFlyout}, Mobile={StaticResource HorizontalTextBoxContextFlyout}}"/>
        <Setter Property="Template">
            <ControlTemplate>
                <DataValidationErrors>
                    <Grid ColumnDefinitions="100,*">
                        <TextBlock Name="PART_Watermark"
                                   Classes="right"
                                   Margin="{TemplateBinding Padding}"
                                   Text="{TemplateBinding Watermark}"
                                   TextAlignment="{TemplateBinding TextAlignment}"
                                   TextWrapping="{TemplateBinding TextWrapping}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   IsHitTestVisible="False"/>
                        <Panel Grid.Column="1">
                            <Border Name="PART_BorderElement"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    MinWidth="{TemplateBinding MinWidth}"
                                    MinHeight="{TemplateBinding MinHeight}"/>
                            <ScrollViewer Name="PART_ScrollViewer"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalScrollBarVisibility="{TemplateBinding (ScrollViewer.HorizontalScrollBarVisibility)}"
                                          VerticalScrollBarVisibility="{TemplateBinding (ScrollViewer.VerticalScrollBarVisibility)}"
                                          IsScrollChainingEnabled="{TemplateBinding (ScrollViewer.IsScrollChainingEnabled)}"
                                          AllowAutoHide="{TemplateBinding (ScrollViewer.AllowAutoHide)}"
                                          BringIntoViewOnFocusChange="{TemplateBinding (ScrollViewer.BringIntoViewOnFocusChange)}">
                                <TextPresenter Name="PART_TextPresenter"
                                               Text="{TemplateBinding Text, Mode=TwoWay}"
                                               CaretBlinkInterval="{TemplateBinding CaretBlinkInterval}"
                                               CaretIndex="{TemplateBinding CaretIndex}"
                                               SelectionStart="{TemplateBinding SelectionStart}"
                                               SelectionEnd="{TemplateBinding SelectionEnd}"
                                               TextAlignment="{TemplateBinding TextAlignment}"
                                               TextWrapping="{TemplateBinding TextWrapping}"
                                               LineHeight="{TemplateBinding LineHeight}"
                                               LetterSpacing="{TemplateBinding LetterSpacing}"
                                               PasswordChar="{TemplateBinding PasswordChar}"
                                               RevealPassword="{TemplateBinding RevealPassword}"
                                               SelectionBrush="{TemplateBinding SelectionBrush}"
                                               SelectionForegroundBrush="{TemplateBinding SelectionForegroundBrush}"
                                               CaretBrush="{TemplateBinding CaretBrush}"
                                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <ScrollViewer.Styles>
                                    <Style Selector="ScrollContentPresenter#PART_ContentPresenter">
                                        <Setter Property="Cursor" Value="IBeam" />
                                    </Style>
                                </ScrollViewer.Styles>
                            </ScrollViewer>
                        </Panel>
                    </Grid>
                </DataValidationErrors>
            </ControlTemplate>
        </Setter>

        <Style Selector="^:pointerover">
            <Setter Property="BorderBrush" Value="{DynamicResource HighlightBorder}"/>
        </Style>

        <Style Selector="^:focus">
            <Setter Property="BorderBrush" Value="{DynamicResource ThemeBorder}"/>
            <Setter Property="BorderThickness" Value="2"/>
        </Style>
    </ControlTheme>

    <ControlTheme x:Key="{x:Type RadioButton}" TargetType="RadioButton">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{DynamicResource MainBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource MainForeground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MainBorder}"/>
        <Setter Property="Padding" Value="8 4"/>
        <Setter Property="CornerRadius" Value="12"/>
        <Setter Property="Template">
            <ControlTemplate>
                <Panel>
                    <Border x:Name="PART_Bg"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"/>
                    <ContentPresenter x:Name="PART_ContentPresenter"
                                      Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      Foreground="{TemplateBinding Foreground}"
                                      Padding="{TemplateBinding Padding}"
                                      RecognizesAccessKey="True"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalContentAlignment="Center"
                                      VerticalContentAlignment="Center" />
                </Panel>
            </ControlTemplate>
        </Setter>

        <Style Selector="^:pointerover">
            <Setter Property="Foreground" Value="{DynamicResource HighlightForeground}" />
            <Setter Property="BorderBrush" Value="{DynamicResource HighlightBackground}" />
            <Setter Property="Background" Value="{DynamicResource HighlightBackground}" />
        </Style>

        <Style Selector="^:pressed">
            <Setter Property="RenderTransform" Value="scale(0.98)" />
        </Style>

        <Style Selector="^:checked">
            <Setter Property="BorderBrush" Value="{DynamicResource ThemeBorder}" />
            <Setter Property="Background" Value="{DynamicResource ThemeBorder}" />
            
            <Style Selector="^:pointerover">
                <Setter Property="Foreground" Value="{DynamicResource MainForeground}" />
            </Style>

            <Style Selector="^:pressed">
                <Setter Property="RenderTransform" Value="scale(1)" />
            </Style>
        </Style>

        <Style Selector="^:disabled">
            <Setter Property="Foreground" Value="{DynamicResource DisabledForeground}" />
        </Style>
    </ControlTheme>

    <ControlTheme x:Key="{x:Type ToggleButton}" TargetType="ToggleButton">
        <Setter Property="Background" Value="{DynamicResource MainBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource MainForeground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MainBorder}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="8 4"/>
        <Setter Property="CornerRadius" Value="12"/>
        <Setter Property="Template">
            <ControlTemplate>
                <Panel>
                    <Border x:Name="PART_Highlight"
                            Background="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"/>
                    <Border x:Name="PART_Bg"
                            Opacity="0.64"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"/>
                    <ContentPresenter x:Name="PART_ContentPresenter"
                                      Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      Foreground="{TemplateBinding Foreground}"
                                      Padding="{TemplateBinding Padding}"
                                      RecognizesAccessKey="True"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalContentAlignment="Center"
                                      VerticalContentAlignment="Center" />
                </Panel>
            </ControlTemplate>
        </Setter>

        <Style Selector="^:pointerover">
            <Setter Property="Foreground" Value="{DynamicResource HighlightForeground}" />
            <Style Selector="^ /template/ Border#PART_Highlight">
                <Setter Property="Background" Value="{DynamicResource HighlightBackground}"/>
            </Style>
        </Style>

        <Style Selector="^:pressed">
            <Setter Property="RenderTransform" Value="scale(0.98)" />
        </Style>

        <Style Selector="^:checked">
            <Style Selector="^ /template/ Border#PART_Highlight">
                <Setter Property="BorderBrush" Value="{TemplateBinding Background}"/>
                <Setter Property="BorderThickness" Value="2"/>
            </Style>
        </Style>

        <Style Selector="^:disabled">
            <Setter Property="Foreground" Value="{DynamicResource DisabledForeground}" />
        </Style>
    </ControlTheme>
    
    
</ResourceDictionary>
